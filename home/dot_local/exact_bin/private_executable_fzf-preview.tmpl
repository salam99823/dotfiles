#!/bin/zsh
# Dependencies:
# bat OR cat
# eza OR exa OR ls
# kitty OR chafa OR catimg
# ouch
# hexyl
if [[ $# == 0 ]]; then
  echo >&2 "usage: $0 [FILE]..."
  exit 1
fi
file=${1/#\~\//$HOME/}
ftype=$(file --mime-type -b -- "$file")
fencode=$(file --mime-encoding -b -- "$file")
{{- $path := splitList ":" (env "PATH") }}

case "$ftype" in
text/*)
  {{- $bat := findOneExecutable (list "bat" "batcat") $path }}
  {{- if $bat }}
    {{- $bat }} --style="plain" --color=always --pager=never -- "$file"
  {{- else if lookPath "cat" }}
    cat "$file"
  {{- end }}
  ;;
*/directory)
  {{- $eza := findOneExecutable (list "eza" "exa") $path }}
  {{- if $eza }}
    {{- $eza }} -laTL1 --color=always --no-filesize --no-time --no-quotes "$file"
  {{- else if lookPath "ls" }}
    ls -lahG "$file"
  {{- end }}
  ;;
image/*)
  dim=${FZF_PREVIEW_COLUMNS}x${FZF_PREVIEW_LINES}
  if [[ $dim == x ]]; then
    dim=$(stty size </dev/tty | awk '{print $2 "x" $1}')
  elif ! [[ $KITTY_WINDOW_ID ]] && ((FZF_PREVIEW_TOP + FZF_PREVIEW_LINES == $(stty size </dev/tty | awk '{print $1}'))); then
    dim=${FZF_PREVIEW_COLUMNS}x$((FZF_PREVIEW_LINES - 1))
  fi
  if [[ $KITTY_WINDOW_ID ]]; then
    kitty icat --clear --transfer-mode=memory --unicode-placeholder --stdin=no --place="$dim@0x0" "$file" | sed '$d' | sed $'$s/$/\e[m/'
  else
    {{- if lookPath "chafa" }}
    chafa -s "$dim" "$file"
    {{- else if lookPath "catimg" }}
    catimg -w "${dim%%x*}" "$file"
    {{- end }}
  fi
  ;;
application/*zip|\
application/x-tar|\
application/x-bzip2|\
application/x-7z-compressed|\
application/x-rar|\
application/x-xz)ouch list "$file"
  ;;
*)hexyl --border none --terminal-width ${FZF_PREVIEW_COLUMNS} "$file"
esac
